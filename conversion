<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Unit Converter (km ↔ mi)</title>
    <!-- Load Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        /* Custom font for a clean, modern look */
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap');
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f1f5f9; /* Light gray background */
        }
        /* Custom focus state for accessibility and aesthetics */
        input:focus, select:focus, button:focus {
            outline: none;
            box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.4);
        }
    </style>
</head>
<body class="flex items-center justify-center min-h-screen p-4">

    <div class="w-full max-w-lg bg-white p-8 rounded-2xl shadow-xl border border-gray-100">

        <!-- Title and Description -->
        <header class="text-center mb-8">
            <h1 class="text-3xl font-bold text-indigo-600">Kilometers ↔ Miles Converter</h1>
            <p class="text-gray-500 mt-2">Convert distances with precision and ease.</p>
        </header>

        <!-- Input Form Container -->
        <div class="space-y-6">

            <!-- Input Value -->
            <div>
                <label for="inputValue" class="block text-sm font-medium text-gray-700 mb-2">Value to Convert</label>
                <input type="number" id="inputValue" value="100" min="0" placeholder="Enter number..."
                       class="w-full p-3 border border-gray-300 rounded-lg focus:ring-indigo-500 focus:border-indigo-500 transition duration-150 ease-in-out text-lg"
                       aria-label="Input value for conversion">
            </div>

            <!-- Conversion Direction Selector -->
            <div>
                <label for="conversionDirection" class="block text-sm font-medium text-gray-700 mb-2">Conversion Direction</label>
                <div class="relative">
                    <select id="conversionDirection"
                            class="appearance-none w-full p-3 border border-gray-300 rounded-lg bg-white focus:ring-indigo-500 focus:border-indigo-500 transition duration-150 ease-in-out text-lg pr-10"
                            aria-label="Select conversion direction">
                        <option value="km_to_mi">Kilometers (km) → Miles (mi)</option>
                        <option value="mi_to_km">Miles (mi) → Kilometers (km)</option>
                    </select>
                    <!-- Custom Arrow Icon -->
                    <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700">
                        <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd" />
                        </svg>
                    </div>
                </div>
            </div>

            <!-- Convert Button -->
            <button onclick="convertUnit()"
                    class="w-full py-3 px-4 bg-indigo-600 text-white font-semibold rounded-lg shadow-md hover:bg-indigo-700 transition duration-200 ease-in-out text-lg transform hover:scale-[1.01] active:scale-[0.99]"
                    aria-live="polite">
                Convert
            </button>
        </div>

        <!-- Output Result Section -->
        <div class="mt-8 pt-6 border-t border-gray-200">
            <h2 class="text-xl font-semibold text-gray-800 mb-3">Result:</h2>
            <div id="outputResult"
                 class="min-h-[64px] flex items-center justify-center p-4 bg-indigo-50 rounded-xl border-2 border-indigo-200 text-3xl font-extrabold text-indigo-800 transition-all duration-300">
                Enter values and click 'Convert'.
            </div>
        </div>
    </div>

    <!-- JavaScript Logic -->
    <script>
        // Constants for conversion factors
        // The standard convention: 1 mile = 1.60934 kilometers
        const MILES_PER_KM = 0.621371; // 1 km is approx 0.621371 miles
        const KM_PER_MILE = 1.60934;  // 1 mi is approx 1.60934 kilometers

        /**
         * Clears the result area and shows a temporary status message.
         * @param {string} message - The message to display (e.g., 'Loading...')
         * @param {string} className - Optional Tailwind classes for styling (e.g., error red)
         */
        function displayMessage(message, className = 'text-gray-500 font-medium text-lg') {
            const resultElement = document.getElementById('outputResult');
            resultElement.innerHTML = message;
            // Reset and apply temporary classes
            resultElement.className = "min-h-[64px] flex items-center justify-center p-4 rounded-xl transition-all duration-300 " + className;
            // Restore default styling after showing the error/status, unless it's the final result
            if (!className.includes('text-3xl')) {
                setTimeout(() => {
                     // Reapply the default success state classes
                    resultElement.className = "min-h-[64px] flex items-center justify-center p-4 bg-indigo-50 rounded-xl border-2 border-indigo-200 text-3xl font-extrabold text-indigo-800 transition-all duration-300";
                    resultElement.innerHTML = "Enter values and click 'Convert'.";
                }, 3000);
            }
        }

        /**
         * Main function to perform the unit conversion based on user input and selection.
         */
        function convertUnit() {
            const inputElement = document.getElementById('inputValue');
            const directionElement = document.getElementById('conversionDirection');
            const resultElement = document.getElementById('outputResult');

            const inputValue = parseFloat(inputElement.value);
            const direction = directionElement.value;

            // 1. Input Validation
            if (isNaN(inputValue) || inputValue <= 0) {
                // Display error message instead of using alert()
                displayMessage(
                    '❌ Please enter a valid positive number.',
                    'bg-red-100 border-2 border-red-400 text-red-700 font-medium text-lg'
                );
                return;
            }

            let result = 0;
            let resultUnit = '';
            let originalUnit = '';

            // 2. Perform Calculation based on Direction
            if (direction === 'km_to_mi') {
                // Kilometers to Miles
                result = inputValue * MILES_PER_KM;
                resultUnit = 'mi';
                originalUnit = 'km';
            } else if (direction === 'mi_to_km') {
                // Miles to Kilometers
                result = inputValue * KM_PER_MILE;
                resultUnit = 'km';
                originalUnit = 'mi';
            } else {
                // Should not happen, but good for robustness
                displayMessage(
                    '⚠️ Invalid conversion direction selected.',
                    'bg-yellow-100 border-2 border-yellow-400 text-yellow-700 font-medium text-lg'
                );
                return;
            }

            // 3. Format and Display Output
            const formattedInput = inputValue.toLocaleString('en-US', { maximumFractionDigits: 2 });
            const formattedResult = result.toLocaleString('en-US', { maximumFractionDigits: 4 }); // Use 4 for better precision

            const outputHtml = `
                ${formattedResult} ${resultUnit}
                <span class="text-lg font-normal text-indigo-500 block mt-1">
                    (${formattedInput} ${originalUnit})
                </span>
            `;

            // Display the final result
            resultElement.innerHTML = outputHtml;
            // Ensure final result class remains the primary styling
            resultElement.className = "min-h-[64px] flex flex-col items-center justify-center p-4 bg-indigo-50 rounded-xl border-2 border-indigo-200 text-3xl font-extrabold text-indigo-800 transition-all duration-300";
        }

        // Optional: Trigger conversion on Enter key press in the input field
        document.getElementById('inputValue').addEventListener('keypress', function(event) {
            if (event.key === 'Enter') {
                convertUnit();
                event.preventDefault(); // Prevent default form submission if it were a form
            }
        });
    </script>
</body>
</html>
